{
  "hash": "d0fe6ebd0bd2f364870df90e8c7da187",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Case Study #1\"\nsubtitle: \"Generalized Extreme Value Margins and a Matérn Copula\"\nauthor: \"Brynjólfur Gauti Guðrúnar Jónsson\"\ndate: last-modified\nformat:\n  html:\n    toc: false\n    toc-depth: 3\n    number-sections: false\n    highlight-style: github\n    code-fold: show\nbibliography: references.bib\nexecute:\n  echo: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(stdmatern)\nlibrary(cmdstanr)\nlibrary(tidyverse)\nlibrary(evd)\nlibrary(patchwork)\nlibrary(here)\n\ntheme_set(bggjphd::theme_bggj())\nregister_knitr_engine(override = TRUE)\n```\n:::\n\n\n\n\n# Introduction\n\n## Generalized Extreme Value Distribution\n\n## Gaussian Markov Random Fields\n\n## Copulas\n\n### Gaussian Copula\n\n### GMRF Copula\n\n\n# Data\n\n## Sampling from the copula\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim <- c(20, 20)\nrho <- c(0.7, 0.9)\nnu <- 2\nn_obs <- 20\nmu <- 6\nsigma <- 2\nxi <- 0.1\n\nset.seed(1)\nZ <- rmatern_copula(n_obs, dim, rho, nu)\nU <- pnorm(Z)\nY <- qgev(U, loc = mu, scale = sigma, shape = xi)\n```\n:::\n\n::: {.cell .column-page}\n\n```{.r .cell-code  code-fold=\"true\"}\ntibble(\n  Z = Z[, 1],\n  U = U[, 1],\n  Y = Y[, 1]\n) |> \n  mutate(\n    x = rep(seq_len(dim[1]), each = dim[2]),\n    y = rep(seq_len(dim[2]), times = dim[1])\n  ) |> \n  pivot_longer(c(Z, U, Y)) |> \n  mutate(\n    name = fct_relevel(name, \"Z\", \"U\", \"Y\"),\n    name2 = fct_recode(\n      name,\n      \"Gaussian\" = \"Z\",\n      \"Uniform\" = \"U\",\n      \"GEV\" = \"Y\"\n    )\n  ) |> \n  group_by(name) |> \n  group_map(\n    \\(data, ...) {\n      data |> \n        ggplot(aes(x, y, fill = value)) +\n        geom_raster() +\n        scale_fill_viridis_c() +\n        coord_cartesian(expand = FALSE) +\n        theme(\n          legend.position = \"top\"\n        ) +\n        labs(\n          x = NULL,\n          y = NULL,\n          subtitle = unique(data$name2)\n        )\n    }\n  ) |> \n  wrap_plots(ncol = 3) +\n  plot_annotation(\n    title = \"Sampling from the Gaussian Copula\",\n    subtitle = \"Going from Gaussian to Uniform to GEV\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=100%}\n:::\n:::\n\n\n\n\n# Modeling\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexact <- cmdstanr::cmdstan_model(\n  here::here(\"casestudy\", \"Stan\", \"exact.stan\"),\n  include_paths = here::here(\"stanfunctions\"),\n  quiet = TRUE,\n  force_recompile = TRUE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstan_data <- list(\n  dim1 = dim[1],\n  dim2 = dim[2],\n  nu = nu,\n  n_obs = n_obs,\n  y = Y\n)\n\ngev_fit <- evd::fgev(Y)$estimate\ninits <- list(\n  mu = gev_fit[1],\n  sigma = gev_fit[2],\n  xi = pmax(gev_fit[3], 1e-3),\n  rho = c(0.5, 0.5)\n)\n\n\nresults <- exact$sample(\n  data = stan_data,\n  chains = 4,\n  parallel_chains = 4,\n  init = list(inits, inits, inits, inits)\n)\nresults$save_object(here(\"casestudy\", \"results\", \"fit.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresults <- readRDS(here(\"casestudy\", \"results\", \"fit.rds\"))\nresults$summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n  variable    mean  median      sd     mad       q5     q95  rhat ess_bulk\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>    <dbl>   <dbl> <dbl>    <dbl>\n1 lp__     208.    208.    1.63    1.39    204.     210.     1.00    1356.\n2 rho[1]     0.720   0.719 0.0190  0.0191    0.689    0.751  1.00     951.\n3 rho[2]     0.911   0.910 0.00638 0.00639   0.901    0.922  1.00     943.\n4 sigma      2.48    2.42  0.404   0.373     1.94     3.21   1.00     921.\n5 xi         0.161   0.152 0.0697  0.0672    0.0629   0.286  1.00     760.\n6 mu         6.20    6.19  0.564   0.546     5.29     7.13   1.00    2729.\n# ℹ 1 more variable: ess_tail <dbl>\n```\n\n\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}